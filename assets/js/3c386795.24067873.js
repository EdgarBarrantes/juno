"use strict";(self.webpackChunkjuno_docs=self.webpackChunkjuno_docs||[]).push([[777],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,f=d["".concat(c,".").concat(m)]||d[m]||s[m]||o;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7946:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return u},default:function(){return d}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={title:"Feeder Gateway Connection"},c=void 0,p={unversionedId:"feeder-gateway",id:"feeder-gateway",title:"Feeder Gateway Connection",description:"Starknet Api Getaway:",source:"@site/docs/feeder-gateway.mdx",sourceDirName:".",slug:"/feeder-gateway",permalink:"/feeder-gateway",tags:[],version:"current",frontMatter:{title:"Feeder Gateway Connection"},sidebar:"docs",previous:{title:"Getting Started - Go",permalink:"/getting-started-go"},next:{title:"Cairo Integration Steps",permalink:"/cairo-integration"}},u=[],s={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Starknet Api Getaway:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"integration: ",(0,o.kt)("a",{parentName:"li",href:"https://external.integration.starknet.io"},"https://external.integration.starknet.io")),(0,o.kt)("li",{parentName:"ul"},"Goerli: ",(0,o.kt)("a",{parentName:"li",href:"http://alpha4.starknet.io"},"http://alpha4.starknet.io")),(0,o.kt)("li",{parentName:"ul"},"MainNet: ",(0,o.kt)("a",{parentName:"li",href:"https://alpha-mainnet.starknet.io"},"https://alpha-mainnet.starknet.io"))),(0,o.kt)("p",null,"For the feeder Gateway, we will need to create a client, we should base on\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/starkware-libs/cairo-lang/blob/master/src/starkware/starknet/services/api/feeder_gateway/feeder_gateway_client.py"},"this"),"\nmaybe and the methods implemented there."),(0,o.kt)("p",null,"Once we have a Gateway Client, we should be able to get to connect to these endpoints:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"get_contract_addresses"),(0,o.kt)("li",{parentName:"ul"},"call_contract"),(0,o.kt)("li",{parentName:"ul"},"get_block"),(0,o.kt)("li",{parentName:"ul"},"get_state_update"),(0,o.kt)("li",{parentName:"ul"},"get_code"),(0,o.kt)("li",{parentName:"ul"},"get_full_contract"),(0,o.kt)("li",{parentName:"ul"},"get_storage_at"),(0,o.kt)("li",{parentName:"ul"},"get_transaction_status"),(0,o.kt)("li",{parentName:"ul"},"get_transaction"),(0,o.kt)("li",{parentName:"ul"},"get_transaction_receipt"),(0,o.kt)("li",{parentName:"ul"},"get_block_hash_by_id"),(0,o.kt)("li",{parentName:"ul"},"get_block_id_by_hash"),(0,o.kt)("li",{parentName:"ul"},"get_transaction_hash_by_id"),(0,o.kt)("li",{parentName:"ul"},"get_transaction_id_by_hash")),(0,o.kt)("p",null,"This should be implemented gradually, in the beginning, for the interaction with the\nLayer 1 and Starknet State, we will only need:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"get_contract_addresses")),(0,o.kt)("p",null,"We will need this endpoint to get the Starknet contract hash, and, with that information, we can know since which block\nstart to get the state in Layer 1."),(0,o.kt)("p",null,"For this connection, you will need to add to the configuration, a params, ",(0,o.kt)("inlineCode",{parentName:"p"},"starknet_network"),", that should be allocated\nat some point around ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/NethermindEth/juno/blob/main/internal/config/config.go#L23"},"here")," and in case\nof property don't exist, throw an error, just like starknet cli app."))}d.isMDXComponent=!0}}]);